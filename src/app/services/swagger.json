{
  "swagger": "2.0",
  "info": {
    "version": "1.5",
    "title": "Travel project API",
    "description": "This project is based on finding the shortest path among an undirected and weighted graph."
  },
  "host": "localhost:3000",
  "tags": [
    { "name": "Routes", "description": "Features to handle the routes data." }
  ],
  "schemes": ["http"],
  "paths": {
    "/travel-api/route": {
      "post": {
        "tags": ["Routes"],
        "summary": "Create a new route.",
        "description": "",
        "produces": ["application/json"],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "Route object that needs to be create.",
            "required": true,
            "schema": { "$ref": "#/definitions/Route" }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful route creation.",
            "schema": {
              "$ref": "#/definitions/Success"
            }
          },
          "401": {
            "description": "Invalid route object / Route already existing.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "500": {
            "description": "Internal server error.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/travel-api/route/getCheapest/{originDestination}/{targetDestination}": {
      "get": {
        "tags": ["Routes"],
        "summary": "Search for the best route between two destinations.",
        "description": "",
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "originDestination",
            "in": "path",
            "description": "The origin destination name.",
            "required": true,
            "type": "string"
          },
          {
            "name": "targetDestination",
            "in": "path",
            "description": "The target destination name.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation.",
            "schema": {
              "$ref": "#/definitions/Route"
            }
          },
          "401": {
            "description": "Invalid destinations / Destinations are the same value.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "404": {
            "description": "Destination not found.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "500": {
            "description": "Internal server error.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    }
  },
  "definitions": {
    "Route": {
      "type": "object",
      "properties": {
        "Destinations": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "Price": {
          "type": "number"
        }
      }
    },
    "Success": {
      "type": "object",
      "properties": {
        "message": { "type": "string" }
      }
    },
    "Error": {
      "type": "object",
      "properties": {
        "message": { "type": "string" }
      }
    }
  }
}
